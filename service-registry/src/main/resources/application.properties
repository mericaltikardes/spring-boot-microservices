spring.application.name=service-registry

#Port For Eureka Server
server.port=8761

#2.4 Standalone Mode
#The combination of the two caches (client and server) and the heartbeats make a standalone Eureka server fairly resilient \
#  to failure, as long as there is some sort of monitor or elastic runtime (such as Cloud Foundry) keeping it alive. \
#  In standalone mode, you might prefer to switch off the client side behavior so that it does not keep trying and failing\
#  \ to reach its peers. The following example shows how to switch off the client-side behavior:
#Eureka client should not register itself on the Eureka server.
eureka.client.register-with-eureka=false
#This setting specifies that the Eureka client will not receive records of other services from the Eureka server.
#That is, when the application starts, it will not receive the list of other services from the Eureka server and will not
#keep a local copy.
eureka.client.fetch-registry=false
